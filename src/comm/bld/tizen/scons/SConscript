# -*- mode: python; python-indent-offset: 4; indent-tabs-mode: nil -*-
##
# 'resource' sub-project main build script
#
##

Import('env')

target_os = env.get('TARGET_OS')
transport = env.get('TARGET_TRANSPORT')
with_tcp = env.get('WITH_TCP')

print "Given Transport is %s" % transport

if env.get('RELEASE'):
    env.AppendUnique(CFLAGS=[
        '-std=c99', '-fPIC', '-D__TIZEN__', '-DWITH_POSIX', '-Wall',
        '-D_GNU_SOURCE', '-DTIZEN_DEBUG_ENABLE'
    ])
else:
    env.AppendUnique(CFLAGS=[
        '-std=c99', '-fPIC', '-D__TIZEN__', '-DWITH_POSIX', '-Wall',
        '-DSLP_SDK_LOG', '-g', '-D_GNU_SOURCE', '-DTIZEN_DEBUG_ENABLE'
    ])

if env.get('LOGGING'):
    env.AppendUnique(CPPDEFINES=['TB_LOG'])

env.ParseConfig(
    "pkg-config --cflags --libs capi-network-connection dlog glib-2.0")
if env.get('OIC_SUPPORT_TIZEN_TRACE') == 'True':
    env.ParseConfig("pkg-config --cflags --libs ttrace")
if 'ALL' in transport:
    env.AppendUnique(CPPDEFINES=[
        'WIFI_ADAPTER', 'NO_ETHERNET_ADAPTER', 'EDR_ADAPTER', 'LE_ADAPTER'
    ])
    print "CA Transport is ALL"
else:
    if 'BT' in transport:
        env.AppendUnique(CPPDEFINES=['EDR_ADAPTER'])
        print "CA Transport is BT"
    else:
        env.AppendUnique(CPPDEFINES=['NO_EDR_ADAPTER'])

    if 'BLE' in transport:
        env.AppendUnique(CPPDEFINES=['LE_ADAPTER'])
        print "CA Transport is BLE"
    else:
        env.AppendUnique(CPPDEFINES=['NO_LE_ADAPTER'])

    if 'WIFI' in transport:
        env.AppendUnique(CPPDEFINES=['WIFI_ADAPTER'])
        print "CA Transport is WIFI"
    else:
        env.AppendUnique(CPPDEFINES=['NO_WIFI_ADAPTER'])

    if with_tcp == True:
        env.AppendUnique(CPPDEFINES=['TCP_ADAPTER'])
        print "CA Transport is TCP"
    else:
        env.AppendUnique(CPPDEFINES=['NO_TCP_ADAPTER'])

env.SConscript(['../con/lib/libcoap-4.1.1/SConscript'])
env.SConscript(['../con/SConscript'])
env.SConscript(['../con/c_common/SConscript'])
env.SConscript(['../con/logger/SConscript'])
