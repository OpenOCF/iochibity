# Bazel option defaults. Documentation at https://docs.bazel.build/versions/master/guide.html

## This file is under version control. To customize,
## create user.bazelrc and do not put it under version control.
try-import %workspace%/user.bazelrc

# build options specified are cumulative.

################################################################
# stuff for user.bazelrc:
# startup --batch --host_jvm_args=-XX:-UseParallelGC
# import /home/bobs_project/bazelrc
# dev/debug options
# build -c dbg
# build -s --verbose_failures --sandbox_debug
# build --show_timestamps --keep_going --jobs 600
# build --color=yes
# query --keep_going

# build --define enable_tcp=true
# build --define debug_threads=true
# build --define debug_msgs=true
# build --define debug_tls=true

# build --copt="-fsanitize=address"
# build --copt="-g"
# build --linkopt="-fsanitize=address"

# --action_env=CROSSTOOL_NG_HOME
# end stuff for user.bazelrc

################ sanitizers

# Address Sanitizer https://github.com/google/sanitizers/wiki/AddressSanitizer
# see also https://developer.apple.com/documentation/code_diagnostics/address_sanitizer
# build --copt="-fsanitize=address"
# build --copt="-g"
# build --linkopt="-fsanitize=address"

# Memory Sanitizer (linux only?) https://github.com/google/sanitizers/wiki/MemorySanitizer
# build --copts="-fsanitize=memory"
# build --copts="-fPIE"
# build --copts="-pie"

################################################################
# OpenOCF build options
# sorry, this is temporarily necessary.
build --define=role=client

################################################################
# target: Android

#build:android-arm8 --fat_apk_cpu=arm64-v8a
#build:android-arm8 --android_cpu=arm64-v8a
build:android-arm8 --cpu=arm64-v8a
build:android-arm8 --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:android-arm8 --crosstool_top=@androidndk//:default_crosstool
build:android-arm8 --define android=true
build:android-arm8 --define android_arm8=true

# build:android-arm7 --fat_apk_cpu=armeabi-v7a
# build:android-arm7 --android_cpu=armeabi-v7a
build:android-arm7 --cpu=armeabi-v7a
build:android-arm7 --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:android-arm7 --crosstool_top=@androidndk//:default_crosstool
build:android-arm7 --define android=true
build:android-arm7 --define android_arm7=true

# build:android-x86 --fat_apk_cpu=x86
# build:android-x86 --android_cpu=x86_64
build:android-x86 --cpu=x86
build:android-x86 --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:android-x86 --crosstool_top=@androidndk//:default_crosstool
build:android-x86 --define android=true
build:android-x86 --define android_x86=true

build:android-x86_64 --cpu=x86_64
build:android-x86_64 --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:android-x86_64 --crosstool_top=@androidndk//:default_crosstool
build:android-x86_64 --define android=true
build:android-x86_64 --define android_x86_64=true

# for cc_library targets:
# ?? build:android-arm8 --crosstool_top=@androidndk//:toolchain-libcpp

## compilers
#build --android_compiler=clang3.8
#build --android_compiler=gcc

################################################################
####  Raspberry Pi 3B

build:rpi-arm8 --crosstool_top=//tools/ctng:toolchain
build:rpi-arm8 --define arm=true
build:rpi-arm8 --cpu=arm64-v8a

################################################################
####  Generic Linux

build:linux-x86_64 --crosstool_top=//tools/ctng:toolchain
build:linux-x86_64 --cpu=x86_64

################################################################
# MinGW64

#build --crosstool_top=//platforms/windows:toolchains
#build --action_env=TMP=/tmp
#build --cpu=x64_windows_msys
#build --compiler=mingw64-gcc

################################################################
# misc
build:memcheck --strip=never --test_timeout=3600
