##
# 'resource' sub-project main build script
#
##

Import('env')

target_os = env.get('TARGET_OS')
transport = env.get('TARGET_TRANSPORT')

print "Given Transport is %s" % transport

if env.get('RELEASE'):
	env.AppendUnique(CFLAGS = ['-fPIC', '-D__TIZEN__','-DWITH_POSIX', '-Wall','-D_GNU_SOURCE','-DTIZEN_DEBUG_ENABLE'])
else:
	env.AppendUnique(CFLAGS = ['-fPIC', '-D__TIZEN__','-DWITH_POSIX', '-Wall', '-DSLP_SDK_LOG', '-g','-D_GNU_SOURCE','-DTIZEN_DEBUG_ENABLE'])

if env.get('LOGGING'):
	env.AppendUnique(CPPDEFINES = ['-DTB_LOG'])

env.ParseConfig("pkg-config --cflags --libs capi-network-wifi dlog glib-2.0")
if 'ALL' in transport:
		env.AppendUnique(CPPDEFINES = ['WIFI_ADAPTER', 'NO_ETHERNET_ADAPTER','EDR_ADAPTER','LE_ADAPTER'])
		print "CA Transport is ALL"
else:
	if 'BT' in transport:
		env.AppendUnique(CPPDEFINES = ['EDR_ADAPTER'])
		print "CA Transport is BT"
	else:
		env.AppendUnique(CPPDEFINES = ['NO_EDR_ADAPTER'])

	if 'BLE' in transport:
		env.AppendUnique(CPPDEFINES = ['LE_ADAPTER'])
		print "CA Transport is BLE"
	else:
		env.AppendUnique(CPPDEFINES = ['NO_LE_ADAPTER'])

	if 'IP' in transport:
		env.AppendUnique(CPPDEFINES = ['WIFI_ADAPTER'])
		print "CA Transport is WIFI"
	else:
		env.AppendUnique(CPPDEFINES = ['NO_WIFI_ADAPTER'])

env.SConscript(['../resource/SConscript'])
