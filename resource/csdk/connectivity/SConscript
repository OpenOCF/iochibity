##
# CA build script
##

Import('env')

target_os = env.get('TARGET_OS')
transport = env.get('TARGET_TRANSPORT')
build_sample = env.get('BUILD_SAMPLE')
with_ra = env.get('WITH_RA')
with_tcp = env.get('WITH_TCP')

print "Connectivity Configuration (resource/csdk/connectivity/SConscript):"
print "\tTarget Transport is %s" % transport
print "\tTarget OS is %s" % target_os
print "\tBuild with Sample? %s" % build_sample

targets_disallow_multitransport = ['arduino']

if target_os in targets_disallow_multitransport:
    if ('ALL' in transport) or (len(transport) != 1):
        print "*** Error invalid option values: TARGET_TRANSPORT"
        print "%s disallowed until testing can validate use of multiple transports on %s %d" % (transport, target_os, len(transport))
        Exit(1)

if 'ALL' in transport:
	if with_ra == True:
			env.AppendUnique(CPPDEFINES = ['RA_ADAPTER'])
	if with_tcp == True:
			env.AppendUnique(CPPDEFINES = ['TCP_ADAPTER'])
	if target_os == 'linux':
		env.AppendUnique(CPPDEFINES = ['IP_ADAPTER','NO_EDR_ADAPTER','LE_ADAPTER'])
	elif target_os == 'tizen':
		env.AppendUnique(CPPDEFINES = ['IP_ADAPTER','EDR_ADAPTER','LE_ADAPTER'])
	elif target_os == 'android':
		env.AppendUnique(CPPDEFINES = ['IP_ADAPTER','EDR_ADAPTER','LE_ADAPTER', 'NFC_ADAPTER'])
	elif target_os in['ios', 'darwin']:
		env.AppendUnique(CPPDEFINES = ['IP_ADAPTER','NO_EDR_ADAPTER','NO_LE_ADAPTER'])
	else:
		env.AppendUnique(CPPDEFINES = ['IP_ADAPTER','EDR_ADAPTER','LE_ADAPTER'])
else:
	if 'BT' in transport:
		if target_os in ['darwin', 'linux']:
			print "CA Transport BT is not supported on " + target_os
			Exit(1)
		else:
			env.AppendUnique(CPPDEFINES = ['EDR_ADAPTER'])
	else:
		env.AppendUnique(CPPDEFINES = ['NO_EDR_ADAPTER'])

	if 'BLE' in transport:
	        if target_os == 'darwin':
		    print "CA Transport BLE not supported on Darwin"
		    Exit(1)
		else:
		    env.AppendUnique(CPPDEFINES = ['LE_ADAPTER'])
	else:
		env.AppendUnique(CPPDEFINES = ['NO_LE_ADAPTER'])

	if 'IP' in transport:
		env.AppendUnique(CPPDEFINES = ['IP_ADAPTER'])
	else:
		env.AppendUnique(CPPDEFINES = ['NO_IP_ADAPTER'])

	if with_tcp == True:
		if target_os in ['darwin', 'linux', 'tizen', 'android', 'arduino']:
			env.AppendUnique(CPPDEFINES = ['TCP_ADAPTER', 'WITH_TCP'])
		else:
			print "CA Transport TCP is not supported "
			Exit(1)
	else:
		env.AppendUnique(CPPDEFINES = ['NO_TCP_ADAPTER'])

	if 'NFC' in transport:
		if target_os in['android']:
			env.AppendUnique(CPPDEFINES = ['NFC_ADAPTER'])
		else:
			print "CA Transport NFC is not supported "
			Exit(1)
	else:
		env.AppendUnique(CPPDEFINES = ['NO_NFC_ADAPTER'])

env.SConscript('./src/SConscript')
