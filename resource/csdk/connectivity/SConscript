##
# CA build script
##

import os

Import('env')

local_env = env.Clone()

build_sysroot = local_env.get('BUILD_SYSROOT')

target_os = local_env.get('TARGET_OS')
transport = local_env.get('TARGET_TRANSPORT')
build_sample = local_env.get('BUILD_SAMPLE')
with_ra = local_env.get('WITH_RA')
with_tcp = local_env.get('WITH_TCP')
with_mq = local_env.get('WITH_MQ')

print "Connectivity Configuration (resource/csdk/connectivity/SConscript):"
print "\tTarget Transport is %s" % transport
print "\tTarget OS is %s" % target_os
print "\tBuild with Sample? %s" % build_sample
print "MQ flag is %s" % with_mq

targets_disallow_multitransport = ['arduino']

if target_os in targets_disallow_multitransport:
    if ('ALL' in transport) or (len(transport) != 1):
        print "*** Error invalid option values: TARGET_TRANSPORT"
        print "%s disallowed until testing can validate use of multiple transports on %s %d" % (transport, target_os, len(transport))
        Exit(1)

# # Getting common source files
local_env.SConscript(os.path.join('common', 'SConscript'),
                     variant_dir='common_',
                     duplicate=0)

# # Getting util source files
local_env.SConscript(os.path.join('util', 'SConscript'),
                     variant_dir='util_',
                     duplicate=0)

local_env.SConscript('src/SConscript',
                     variant_dir='core',
                     duplicate=0)

# Build libcoap
local_env.SConscript(os.path.join('lib', 'libcoap-4.1.1', 'SConscript'),
                     variant_dir='coap',
                     duplicate=0)

