#******************************************************************
#
# Copyright 2014 Intel Mobile Communications GmbH All Rights Reserved.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Import('env')
import os
import os.path

#GAR gteset
# # SConscript file for Local PKI google tests
# gtest_env = SConscript('#extlibs/gtest/SConscript')
# malloctest_env = gtest_env.Clone()

target_os = env.get('TARGET_OS')
malloctest_env = env.Clone()
src_dir = malloctest_env.get('SRC_DIR')

######################################################################
# Build flags
######################################################################
malloctest_env.PrependUnique(CPPPATH = ['../include'])

malloctest_env.AppendUnique(LIBPATH = [os.path.join(malloctest_env.get('BUILD_DIR'), 'resource', 'c_common')])
malloctest_env.PrependUnique(LIBS = ['c_common', 'gtest', 'gtest_main', 'pthread'])

if malloctest_env.get('LOGGING'):
	malloctest_env.AppendUnique(CPPDEFINES = ['TB_LOG'])
#
######################################################################
# Source files and Targets
######################################################################
malloctests = malloctest_env.Program('malloctests', ['linux/oic_malloc_tests.cpp'])

Alias("test", [malloctests])

env.AppendTarget('test')

if env.get('WITH_VALGRIND'):
        valgrind_xml = 'resource_ccommon_malloc_test.memcheck'
else:
        valgrind_xml = ''

import runtest.RunTest

runtest.RunTest.run_test(malloctest_env,
			valgrind_xml,
			'resource/c_common/oic_malloc/test/malloctests')
