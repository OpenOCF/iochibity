# FIXME: remove deps on third_party, should depend only on openocf

cc_binary(
    name = "client",
    copts = ["-Isrc",
             "-Iinclude",
             "-Isrc/comm/api",
             "-Isrc/logger",
             "-Isrc/ocf",
             "-Isrc/ocf/client",
             "-Isrc/portability",
             "-Iexternal/cjson",
             # "-Iconfig/darwin",
             # "-Iconfig/darwin/coap",
             "-Iexternal/libcoap/include",
             "-Iexternal/libcoap/include/coap",
             "-Iexternal/tinycbor/src",
    ]
    + select({"//config:rpi_arm8": ["-Iexternal/cosysroot_osx_rpi3b/usr/include",
                                    "-Iexternal/cosysroot_osx_rpi3b/usr/include/cdk",
                                    "-std=c11"],
              "//config:android_arm8": ["-Iexternal/cosysroot_ndk/usr/include",
                                        "-Iexternal/cosysroot_ndk/usr/include/cdk",
                                        "-std=c11"],
              # ":wrlinux": ["-Iexternal/cosysroot_wrlinux/usr/local/include",
              #            "-Iexternal/cosysroot_wrlinux/usr/local/include/cdk",
              #            "-Iexternal/cosysroot_wrlinux/usr/include",
              #            "-std=c11"],
              "//config:darwin": ["-Iexternal/usr_local_macos/include",
                                  "-Iexternal/usr_local_macos/include/cdk",
                                  "-U DEBUG"],
              "//config:darwin64": ["-Iexternal/usr_local_macos/include",
                                    "-Iexternal/usr_local_macos/include/cdk",
                                    "-U DEBUG"],
              "//config:linux": ["-Iexternal/usr_local_linux/include",
                                 "-Iexternal/usr_local_linux/include/cdk"],
              "//conditions:default": ["BROKEN"]}), # OS X

    deps = ["//src:config",
            # "//include",
            "//:openocf",
            # "//src/ocf:client",
            # "@tinycbor//:tinycbor",
            "@cjson//:cjson",
            # "@libcoap//:libcoap"
    ] + select({"//config:rpi_arm8": ["@cosysroot_osx_rpi3b//:cdk"],
                "//config:darwin": ["@usr_local_macos//:cdk"],
                "//config:darwin64": ["@usr_local_macos//:cdk"],
                "//config:linux": ["@usr_local_linux//:cdk"],
                # "@usr_local_linux//:ncurses"],
                "//config:android_arm8": ["@cosysroot_ndk//:cdk"],
                #":wrlinux": ["@cosysroot_wrlinux//:cdk"],
                "//conditions:default": ["BORKED"]}),

    srcs = ["action_dialog.c",
            "action_dialog.h",
            "client_main.c",
            "client_main.h",
            "client_ui.c",
            "client_ui.h",
            "coresource_inspector.c",
            "coresource_inspector.h",
            "coresource_mgr.c",
            "coresource_mgr.h",
            "coresource_retrieve.c",
            "coresource_retrieve.h",
	    "discovery.c",
	    "discovery.h",
            "inbound_msg_db_mgr.c",
            "inbound_msg_db_mgr.h",
            "inbound_msg_inspector.c",
            "inbound_msg_inspector.h",
            "logging.c",
            "logging.h",
            "menu.c",
            "menu.h",
            "msg_scrollers.c",
            "msg_scrollers.h",
            "outbound_msg_db_mgr.c",
            "outbound_msg_db_mgr.h",
            "svrs_codec.c",
            "svrs_codec.h",
            "utils.c",
            "utils.h",
            # "subwindow.c",
            # "subwindow.h"
            # "config/acl.c",
            # "config/svr_config.c",
            # "config/doxm.c",
            # "config/cred.c",
    ],
    data = ["client_config.cbor"]
)

# genrule(
#     name = "svrs",
#     srcs = ["client_owner_config.edn"],
#     outs = ["client_config.cbor"],
#     cmd = "\n".join(["edn-to-json $(location client_config.edn)  > client_config.json",
#                      "json2cbor client_config.json > \"$@\""])
# )

# genrule(
#     name = "config",
#     srcs = [":json"],
#     outs = ["client_config.cbor"],
#     cmd = "json2cbor $(location :json) > \"$@\"",
# )

# genrule(
#     name = "config",
#     srcs = [":json"],
#     outs = ["client_config.cbor"],
#     cmd = "json2cbor $(location :json) > \"$@\"",
# )
