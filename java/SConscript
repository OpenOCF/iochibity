import os
import platform
Import('env')

target_arch = env.get('TARGET_ARCH')
if env.get('RELEASE'):
	release="release"
else:
	release="debug"
secured = env.get('SECURED')

target_os = env.get('TARGET_OS')

src_dir   = env.get('SRC_DIR')
build_dir = env.get('BUILD_DIR')

if target_os == "android":
	os.environ['ANDROID_HOME'] = env.get('ANDROID_HOME')
	os.environ['ANDROID_NDK_HOME'] = env.get('ANDROID_NDK')

	if not os.path.exists(android_home + '/platforms/android-21') or not os.path.exists(android_home + '/build-tools/20.0.0'):
		print '''
***************************************** Info ********************************
*   Either 'Android API 21' is not installed or 'Android SDK Build Tools      *
*   20.0.0' is not installed. The Android SDK Manager will now open. Please   *
*   be sure to deselect all options, then select the following 2 packages:    *
*       1. Under "Tools" select "Android SDK Build-tools" Revision 20.        *
*       2. Under "Android 5.0.1 (API 21)" select "SDK Platform"               *
*       3. Continue by selecting "Install 2 Packages"                         *
*                                                                             *
*   NOTE: If you have an http proxy, please press ctrl+c now and edit/create  *
*         the following file in your $HOME directory as follows:              *
*                                                                             *
* Edit/Create file: "$HOME/.android/androidtool.cfg"                          *
*                                                                             *
*    http.proxyPort=<YOUR_PORT_NUMBER>                                        *
*    sdkman.monitor.density=108                                               *
*    http.proxyHost=<YOUR_HTTP_PROXY_ADDRESS>                                 *
*    sdkman.show.update.only=true                                             *
*    sdkman.ask.adb.restart=false                                             *
*    sdkman.force.http=true                                                   *
*    sdkman.show.updateonly=true                                              *
*                                                                             *
*******************************************************************************

...Opening Android SDK Manager now. Once you are finished, the build will continue.
'''
	os.system(android_home + '/tools/android')

if target_os == 'linux':
   shlibsuffix = '.so'
   jnilibsuffix = '.so'
elif target_os == 'darwin':
   shlibsuffix = '.dylib'
   jnilibsuffix = '.jnilib'
elif target_os == 'win32':
   shlibsuffix = '.dll'
   jnilibsuffix = '.dll'

def ensure_libs(target, source, env):
	return target, [source,
	 build_dir + 'liboc' + shlibsuffix,
	 build_dir + 'liboc_logger' + shlibsuffix]
	 # build_dir + 'libocstack-jni' + jnilibsuffix]

SConscript('jni/SConscript')	#FIXME: do this separately from Java compilation

#SConscript('common/SConscript')

#SConscript('iotivity-' + target_os + '/SConscript')

#SConscript('examples-java/SConscript')

# print "SRC:", src_dir
# print "BLD:", build_dir
# print "REL:", release
# print "SEC:", secured
# print "ARCH:", target_arch
# print "SO:", target_os

jdk_env = Environment(ENV=os.environ)

gradle_home = env.get('GRADLE_HOME')
print "GRADLE_HOME:", gradle_home

if gradle_home:
    jdk_env.PrependENVPath('PATH', gradle_home + '/bin')

gradle_cmd = 'gradle build -b' \
	      + src_dir \
	      + '/java/iotivity-' + target_os + '/build.gradle' \
	      + ' -PTARGET_ARCH=' + target_arch \
	      + ' -PRELEASE=' + release \
	      + ' -PSECURED=' + secured \
	      + ' -PBUILD_DIR=' + build_dir \
	      + ' -PSRC_DIR=' + src_dir \
	      + ' --stacktrace'

# print "GRADLE CMD:", gradle_cmd

jdk_env['BUILDERS']['Gradle'] = Builder(action = gradle_cmd,
			      	        emitter = ensure_libs)

jdk_env['BUILD_DIR'] = env.get('BUILD_DIR')

cmdBuildApi=jdk_env.Gradle(target="base/objs",
			   source="common/src/main/java/org/iotivity/base/OcResource.java")

examples_target = "java"
if target_os == 'android':
	examples_target = "android"

gradle_ex_cmd = 'gradle build' \
	      + ' -p' + src_dir \
	      + '/java/examples-' + examples_target \
	      + ' -PTARGET_OS=' + target_os \
	      + ' -PTARGET_ARCH=' + target_arch \
	      + ' -PRELEASE=' + release \
	      + ' -PSECURED=' + secured \
	      + ' -PBUILD_DIR=' + build_dir \
	      + ' -PSRC_DIR=' + src_dir \
	      + ' --stacktrace'

# print "GRADLE_EX_CMD:", gradle_ex_cmd

jdk_env['BUILDERS']['Gradle'] = Builder(action = gradle_ex_cmd)
			       # + ' --debug'



cmdBuildExamples=jdk_env.Gradle(target='examples-' + examples_target + '/simpleclient/jar',
				source='examples-' + examples_target
				+ '/simpleclient/src/main/java/org/iotivity/base/examples/SimpleClient.java')

Depends(cmdBuildExamples, cmdBuildApi)
