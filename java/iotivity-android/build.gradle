/*
 *******************************************************************
 *
 * Copyright 2015 Intel Corporation.
 *
 *-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 *-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 */



buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
}


apply plugin: 'com.android.library'
    
android {
    sourceSets {
        main {
            java {
                srcDirs 'src/main/java', '../common/src/main/java'
            }
            manifest.srcFile 'src/main/AndroidManifest.xml'
            jniLibs.srcDir "$buildDir/native-libs"
            jni.srcDirs = [] //disable automatic ndk-build call
        }
    }

    compileSdkVersion 21
    buildToolsVersion "20.0.0"
    archivesBaseName = "iotivity-base"

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-${TARGET_ARCH}-${RELEASE}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
        versionCode 1
        versionName "1.1"
        buildConfigField 'int', 'SECURED', SECURED
    }
    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task copyNativeLibs(type: Copy) {
    String[] libraries = [
        'libca-interface.so',
        'libconnectivity_abstraction.so',
        'libgnustl_shared.so',
        'liboc_logger.so',
        'liboc.so',
        'libocstack-jni.so',
        'liboctbstack.so'
    ]
    if ("$SECURED" == '1')
        libraries += [
            'libocprovision.so',
            'libocpmapi.so'
        ]
    from(new File("$BUILD_DIR")) { include libraries }
    into new File(buildDir, "native-libs/$TARGET_ARCH")
}

tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}
